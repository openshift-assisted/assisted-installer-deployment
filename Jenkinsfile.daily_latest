pipeline {
    agent { label 'centos_worker' }
    environment {
        SLACK_TOKEN = credentials('slack-token')
    }
    options {
      timeout(time: 1, unit: 'HOURS') 
    }

    stages {
        stage('Update master and snapshot branch') {
            steps {
                sh '''pip3 install yamlordereddictloader'''
                sh 'python3 tools/update_assisted_installer_yaml.py --full'
                withCredentials([usernamePassword(credentialsId: '9fa5c056-6227-4f70-97df-6aa31854c20a', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD')]){
                    sh('''
                        if [ "$(git status --porcelain)" ];
                        then
                            commitDate="date +%d-%m-%Y-%H-%M"
                            git config --local credential.helper "!f() { echo username=\\$GIT_USERNAME; echo password=\\$GIT_PASSWORD; }; f"
                            git commit -am "Daily commit" -am "`$commitDate`"
                            git push origin HEAD:master

                            git tag latest -f
                            git push origin latest -f
                        else
                            echo "Noting to commit"
                        fi


                    ''')
                }
            }
        }
    }

    post {
        failure {
            script {
                def data = [text: "Daily release fail, see: ${BUILD_URL}"]
                writeJSON(file: 'data.txt', json: data, pretty: 4)
            }
            sh '''curl -X POST -H 'Content-type: application/json' --data-binary "@data.txt"  https://hooks.slack.com/services/$SLACK_TOKEN'''
        }
    }
}