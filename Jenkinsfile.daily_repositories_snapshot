pipeline {
    agent { label 'centos_worker' }
    environment {
        SLACK_TOKEN = credentials('slack-token')
        QUAY_IO_CREDS = credentials('ocpmetal_cred')
    }
    options {
      timeout(time: 1, unit: 'HOURS')
    }

    stages {

        stage('Init'){
            steps {
                sh "docker login quay.io -u ${QUAY_IO_CREDS_USR} -p ${QUAY_IO_CREDS_PSW}"
            }
        }

        stage('Update master and snapshot branch') {
            steps {
                sh '''git clean -f'''
                sh '''make snapshot'''
                withCredentials([usernamePassword(credentialsId: 'osherdp-github-creds', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD')]){
                    sh('''
                        if [ "$(git status --porcelain)" ];
                        then
                            commitDate="date +%d-%m-%Y-%H-%M"
                            git config --local credential.helper "!f() { echo username=\\$GIT_USERNAME; echo password=\\$GIT_PASSWORD; }; f"
                            git commit -am "Automatic snapshot of repositories' current git revisions" -am "`$commitDate`"
                            git push origin HEAD:master

                            git tag nightly -f
                            git push origin nightly -f
                        else
                            echo "Noting to commit"
                        fi


                    ''')
                }
            }
        }
    }

    post {
        failure {
            script {
                def data = [text: "'Repositories revision snapshots' job fail, see: ${BUILD_URL}"]
                writeJSON(file: 'data.txt', json: data, pretty: 4)
            }
            sh '''curl -X POST -H 'Content-type: application/json' --data-binary "@data.txt"  https://hooks.slack.com/services/$SLACK_TOKEN'''
        }
    }
}
